version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.4.0 
  aws-eks: circleci/aws-eks@1.1.0
  


jobs:
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          The name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''

  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          The name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.yml
          resource-name: service-rollingLB

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          The name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment-v1





  # test-cluster:
  #   executor: aws-eks/python3
  #   parameters:
  #     cluster-name:
  #       description: |
  #         The name of the EKS cluster
  #       type: string
  #   steps:
  #     - kubernetes/install
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: << parameters.cluster-name >>
  #     - run:
  #         command: |
  #           kubectl get services
  #         name: Test cluster

workflows:
  deployment:
    jobs:
      - create-small-cluster:
          cluster-name: capstone-cluster
      - create-service:
          cluster-name: capstone-cluster
          requires:
            - create-small-cluster
      - create-deployment:
          cluster-name: capstone-cluster
          requires:
            - create-service

  #     - aws-eks/create-cluster:
  #         cluster-name: my-eks-demo
  #     - test-cluster:
  #         cluster-name: my-eks-demo
  #         requires:
  #           - aws-eks/create-cluster

  #     - aws-eks/delete-cluster:
  #         cluster-name: my-eks-demo
  #         requires:
  #           - test-cluster


  # create-deployment:
  #   executor: aws-eks/python3
  #   parameters:
  #     cluster-name:
  #       description: |
  #         Name of the EKS cluster
  #       type: string
  #   steps:
  #     - checkout
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: << parameters.cluster-name >>
  #         install-kubectl: true
  #     - kubernetes/create-or-update-resource:
  #         get-rollout-status: true
  #         resource-file-path: tests/nginx-deployment/deployment.yaml
  #         resource-name: deployment/nginx-deployment